name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run unit tests
      run: |
        pytest tests/unit/ -v --tb=short --cov=scripts --cov=notebooks \
          --cov-report=xml --cov-report=term-missing \
          -m unit --maxfail=5

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unit
        name: unit-tests
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Run integration tests
      env:
        RDS_HOST: ${{ secrets.RDS_HOST }}
        RDS_PORT: ${{ secrets.RDS_PORT }}
        RDS_DATABASE: ${{ secrets.RDS_DATABASE }}
        RDS_USERNAME: ${{ secrets.RDS_USERNAME }}
        RDS_PASSWORD: ${{ secrets.RDS_PASSWORD }}  # pragma: allowlist secret
        S3_BUCKET: nba-sim-raw-data-lake
      run: |
        pytest tests/integration/ -v --tb=short \
          --cov=scripts --cov=notebooks \
          --cov-report=xml --cov-report=term-missing \
          -m integration --maxfail=3

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: integration
        name: integration-tests
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

  phase-tests:
    name: Phase-Specific Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        phase: [0, 5]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Phase ${{ matrix.phase }} tests
      run: |
        pytest tests/phases/phase_${{ matrix.phase }}/ -v --tb=short \
          -m "phase${{ matrix.phase }}" --maxfail=5 || true

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: phase-${{ matrix.phase }}-test-results
        path: |
          .pytest_cache/
          htmlcov/

  autonomous-tests:
    name: Autonomous System Tests (ADCE)
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Run autonomous system tests
      env:
        RDS_HOST: ${{ secrets.RDS_HOST }}
        RDS_PORT: ${{ secrets.RDS_PORT }}
        RDS_DATABASE: ${{ secrets.RDS_DATABASE }}
        RDS_USERNAME: ${{ secrets.RDS_USERNAME }}
        RDS_PASSWORD: ${{ secrets.RDS_PASSWORD }}  # pragma: allowlist secret
        S3_BUCKET: nba-sim-raw-data-lake
      run: |
        pytest tests/ -v --tb=short \
          -m autonomous --maxfail=3 || true

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, phase-tests, autonomous-tests]
    if: always()

    steps:
    - name: Check test results
      run: |
        echo "Unit Tests: ${{ needs.unit-tests.result }}"
        echo "Integration Tests: ${{ needs.integration-tests.result }}"
        echo "Phase Tests: ${{ needs.phase-tests.result }}"
        echo "Autonomous Tests: ${{ needs.autonomous-tests.result }}"

        if [ "${{ needs.unit-tests.result }}" != "success" ]; then
          echo "::warning::Unit tests failed"
        fi
