# Environment Variables Template
# Copy this file to .env and fill in your actual values
# WARNING: Never commit .env to Git (it's in .gitignore)

# ============================================================================
# AWS Configuration
# ============================================================================

# AWS Region (must be us-east-1 for this project)
AWS_REGION=us-east-1

# AWS Account ID (optional - for reference)
# Find with: aws sts get-caller-identity --query Account --output text
AWS_ACCOUNT_ID=************

# ============================================================================
# S3 Configuration
# ============================================================================

# Raw data lake bucket (already created)
S3_BUCKET=nba-sim-raw-data-lake

# Analytics bucket (for simulation outputs - to be created)
S3_ANALYTICS_BUCKET=nba-sim-analytics-lake

# ============================================================================
# RDS PostgreSQL Configuration (⏸️ To be created in Phase 3.1)
# ============================================================================

# RDS endpoint (update after RDS instance is created)
# Format: nba-sim-db.xxxxx.us-east-1.rds.amazonaws.com
DB_HOST=nba-sim-db.xxxxx.us-east-1.rds.amazonaws.com

# Database port (default PostgreSQL port)
DB_PORT=5432

# Database name
DB_NAME=nba_simulator

# Master username
DB_USER=postgres

# Master password (NEVER commit this!)
# Set this to your actual RDS master password
DB_PASSWORD=your_secure_password_here

# Connection string (constructed from above)
# Format: postgresql://user:password@host:port/database
DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}

# ============================================================================
# AWS Glue Configuration (⏸️ To be created in Phase 2)
# ============================================================================

# Glue database name
GLUE_DATABASE=nba_raw_data

# Glue crawler name
GLUE_CRAWLER=nba-data-crawler

# Glue ETL job name
GLUE_ETL_JOB=nba-etl-job

# ============================================================================
# EC2 Configuration (⏸️ To be created in Phase 4.1)
# ============================================================================

# EC2 instance ID (update after instance is created)
EC2_INSTANCE_ID=i-xxxxxxxxxxxxxxxxx

# EC2 public DNS (changes each time instance starts)
EC2_PUBLIC_DNS=ec2-xx-xx-xx-xx.compute-1.amazonaws.com

# SSH key file path
EC2_SSH_KEY_PATH=~/.ssh/your-key.pem

# ============================================================================
# SageMaker Configuration (⏸️ To be created in Phase 5)
# ============================================================================

# SageMaker notebook instance name
SAGEMAKER_NOTEBOOK=nba-ml-notebook

# SageMaker training job prefix
SAGEMAKER_JOB_PREFIX=nba-training

# S3 path for model artifacts
SAGEMAKER_MODEL_PATH=s3://nba-sim-analytics-lake/models/

# ============================================================================
# Application Configuration
# ============================================================================

# Project root directory
PROJECT_ROOT=/Users/ryanranft/nba-simulator-aws

# Log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Random seed for reproducible simulations
RANDOM_SEED=42

# ============================================================================
# ETL Configuration
# ============================================================================

# Batch size for ETL processing
ETL_BATCH_SIZE=1000

# Max retries for failed operations
ETL_MAX_RETRIES=3

# Timeout in seconds
ETL_TIMEOUT_SECONDS=300

# Number of parallel workers
ETL_NUM_WORKERS=4

# ============================================================================
# Development Configuration
# ============================================================================

# Environment (development, staging, production)
ENVIRONMENT=development

# Enable debug mode (true/false)
DEBUG=true

# Enable verbose logging (true/false)
VERBOSE=false

# ============================================================================
# Testing Configuration
# ============================================================================

# Test database (for local testing)
TEST_DB_HOST=localhost
TEST_DB_PORT=5432
TEST_DB_NAME=nba_test
TEST_DB_USER=test_user
TEST_DB_PASSWORD=test_password

# Use in-memory SQLite for tests (true/false)
USE_SQLITE_TESTS=true

# ============================================================================
# GitHub Configuration (Optional)
# ============================================================================

# GitHub repository
GITHUB_REPO=ryanranft/nba-simulator-aws

# GitHub branch
GITHUB_BRANCH=main

# ============================================================================
# Cost Tracking (Optional)
# ============================================================================

# Monthly budget alert threshold (USD)
MONTHLY_BUDGET_ALERT=150

# Cost allocation tags
COST_PROJECT_TAG=nba-simulator
COST_ENVIRONMENT_TAG=development

# ============================================================================
# Notes
# ============================================================================

# How to use this file:
# 1. Copy to .env: cp .env.example .env
# 2. Update all placeholder values (xxxxx, your_password_here, etc.)
# 3. Never commit .env to Git
# 4. Load in Python: pip install python-dotenv
#    from dotenv import load_dotenv
#    load_dotenv()
#    import os
#    db_host = os.getenv('DB_HOST')

# How to load in shell scripts:
# export $(cat .env | grep -v '^#' | xargs)
# echo $DB_HOST

# Security reminders:
# - Use strong passwords (16+ chars, mixed case, numbers, symbols)
# - Rotate credentials regularly
# - Never share .env file
# - Never commit to Git
# - Use AWS Secrets Manager for production